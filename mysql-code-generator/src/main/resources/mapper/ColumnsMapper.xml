<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.xi.quick.codegenerator.mapper.ColumnsMapper">

    <resultMap id="column" type="org.xi.quick.codegenerator.entity.Column">
        <result column="TABLE_CATALOG" property="tableCatalog" jdbcType="VARCHAR"/>
        <result column="TABLE_SCHEMA" property="tableSchema" jdbcType="VARCHAR"/>
        <result column="TABLE_NAME" property="tableName" jdbcType="VARCHAR"/>
        <result column="COLUMN_NAME" property="columnName" jdbcType="VARCHAR"/>
        <result column="ORDINAL_POSITION" property="ordinalPosition" jdbcType="BIGINT"/>
        <result column="COLUMN_DEFAULT" property="columnDefault" jdbcType="VARCHAR"/>
        <result column="IS_NULLABLE" property="isNullable" jdbcType="VARCHAR"/>
        <result column="DATA_TYPE" property="dataType" jdbcType="VARCHAR"/>
        <result column="CHARACTER_MAXIMUM_LENGTH" property="characterMaximumLength" jdbcType="BIGINT"/>
        <result column="CHARACTER_OCTET_LENGTH" property="characterOctetLength" jdbcType="BIGINT"/>
        <result column="NUMERIC_PRECISION" property="numericPrecision" jdbcType="BIGINT"/>
        <result column="NUMERIC_SCALE" property="numericScale" jdbcType="BIGINT"/>
        <result column="DATETIME_PRECISION" property="datetimePrecision" jdbcType="BIGINT"/>
        <result column="CHARACTER_SET_NAME" property="characterSetName" jdbcType="VARCHAR"/>
        <result column="COLLATION_NAME" property="collationName" jdbcType="VARCHAR"/>
        <result column="COLUMN_TYPE" property="columnType" jdbcType="VARCHAR"/>
        <result column="COLUMN_KEY" property="columnKey" jdbcType="VARCHAR"/>
        <result column="EXTRA" property="extra" jdbcType="VARCHAR"/>
        <result column="PRIVILEGES" property="privileges" jdbcType="VARCHAR"/>
        <result column="COLUMN_COMMENT" property="columnComment" jdbcType="VARCHAR"/>
        <result column="GENERATION_EXPRESSION" property="generationExpression" jdbcType="VARCHAR"/>

        <result column="INDEX" property="index" jdbcType="BOOLEAN"/>
    </resultMap>

    <select id="getColumns" resultMap="column" parameterType="java.lang.String">
        SELECT
        `TABLE_CATALOG`,
        `TABLE_SCHEMA`,
        `TABLE_NAME`,
        `COLUMN_NAME`,
        `ORDINAL_POSITION`,
        `COLUMN_DEFAULT`,
        `IS_NULLABLE`,
        `DATA_TYPE`,
        `CHARACTER_MAXIMUM_LENGTH`,
        `CHARACTER_OCTET_LENGTH`,
        `NUMERIC_PRECISION`,
        `NUMERIC_SCALE`,
        `DATETIME_PRECISION`,
        `CHARACTER_SET_NAME`,
        `COLLATION_NAME`,
        `COLUMN_TYPE`,
        `COLUMN_KEY`,
        `EXTRA`,
        `PRIVILEGES`,
        `COLUMN_COMMENT`,
        `GENERATION_EXPRESSION`
        FROM
        `information_schema`.`COLUMNS`
        <where>
            <if test="databaseName != null and databaseName != ''">
                `TABLE_SCHEMA`=#{databaseName}
            </if>
            <if test="tableName != null and tableName != ''">
                AND `TABLE_NAME`=#{tableName}
            </if>
        </where>
    </select>


    <select id="getColumnsWithIndex" resultMap="column" parameterType="java.lang.String">
        SELECT
            A.`TABLE_CATALOG`,
            A.`TABLE_SCHEMA`,
            A.`TABLE_NAME`,
            A.`COLUMN_NAME`,
            A.`ORDINAL_POSITION`,
            A.`COLUMN_DEFAULT`,
            A.`IS_NULLABLE`,
            A.`DATA_TYPE`,
            A.`CHARACTER_MAXIMUM_LENGTH`,
            A.`CHARACTER_OCTET_LENGTH`,
            A.`NUMERIC_PRECISION`,
            A.`NUMERIC_SCALE`,
            A.`DATETIME_PRECISION`,
            A.`CHARACTER_SET_NAME`,
            A.`COLLATION_NAME`,
            A.`COLUMN_TYPE`,
            A.`COLUMN_KEY`,
            A.`EXTRA`,
            A.`PRIVILEGES`,
            A.`COLUMN_COMMENT`,
            A.`GENERATION_EXPRESSION`,
            (CASE WHEN B.`COLUMN_NAME` IS NULL THEN FALSE ELSE TRUE END) AS `INDEX`
        FROM
            (
                SELECT * FROM `information_schema`.`COLUMNS`
                WHERE `TABLE_SCHEMA`=#{databaseName} AND `TABLE_NAME`=#{tableName}
            ) AS A
            LEFT JOIN
            (
                SELECT DISTINCT `COLUMN_NAME`
                FROM `information_schema`.`STATISTICS`
                WHERE `TABLE_SCHEMA`=#{databaseName} AND `TABLE_NAME`=#{tableName}
                GROUP BY `COLUMN_NAME`
            ) AS B
            ON A.`COLUMN_NAME`=B.`COLUMN_NAME`
        ORDER BY `ORDINAL_POSITION`
    </select>
</mapper>